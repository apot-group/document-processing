name: DEPLOY_TO_GKE_PRODUCTION
on:
  push:
    branches:
      - master

env:
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }} # dockerhub pass
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }} # dockerhub user
  PROJECT_ID: ${{ secrets.GKE_PROJECT }} # gke project_id
  GKE_CLUSTER: cluster-document-processing # Add your cluster name here.
  GKE_ZONE: asia-south1-a  # Add your cluster zone here.
  DEPLOYMENT_NAME: gke-production # development name
  DP_API_IMAGE: duynguyenngoc/dp-api:latest # Image docker
  DP_CLIENT_IMAGE: duynguyenngoc/dp-client:latest # Image docker



jobs:
  build:
    name: Build, Publish
    runs-on: ubuntu-latest
    environment: production
    steps:
     # [Step-1] check config git
      - name: Checkout
        uses: actions/checkout@v2

      # [Step-2] login dockerhub container
      - name: Login to DockerHub Registry
        run: |
          echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
        
      # [Step-3] buid and tag image from Dockerfile
      - name: Build docker image api
        run: |
          echo ${{ secrets.API_ENV_FIEL }}
          docker build -t $DP_API_IMAGE \
          --no-cache ./dp-api/

      # [Step-3] buid and tag image from Dockerfile
      - name: Build docker image client
        run: |
          docker build -t $DP_CLIENT_IMAGE \
            --build-arg DOMAIN=${{ secrets.DOMAIN }} \
            --build-arg BE_PORT=${{ secrets.API_PORT }} \
            --build-arg BE_HOST=${{ secrets.API_HOST }} \
            --no-cache ./dp-client/
      
      # [Step-4] Push image to docker hub
      - name: Push image to DockerHub
        run: |
          docker push $DP_API_IMAGE
          docker push $DP_CLIENT_IMAGE

  deploy:
    name: Deploy DP
    runs-on: ubuntu-latest
    environment: production
    needs: build

    steps:
      # [Step-1] check config git
      - name: Checkout
        uses: actions/checkout@v2

      # [Step-2] login dockerhub container
      - name: Login to DockerHub Registry
        run: |
          echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
        
      # [Step-5] Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker

      # [Step-6] Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}
      
      # [Step-7] Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          kubectl delete --all deployment,service,pod --namespace=default
          kubectl apply -f ./o-k8s/
          kubectl get deployments -o wide
          kubectl get services -o wide
    